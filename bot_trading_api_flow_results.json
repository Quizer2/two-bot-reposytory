{
  "timestamp": "2025-10-13T21:56:24.409335",
  "test_type": "Bot → TradingEngine → API → Exchange Flow",
  "results": [
    {
      "test": "TradingEngine Availability",
      "status": "PASSED",
      "details": "TradingEngine methods available: ['place_order', 'cancel_order', 'get_balance', 'get_order_status']"
    },
    {
      "test": "Exchange Connectivity",
      "status": "PASSED",
      "details": "Connected exchanges: ['binance', 'bybit', 'kucoin', 'coinbase']. Failed: []"
    },
    {
      "test": "Order Placement Simulation",
      "status": "PASSED",
      "details": "Test order placed successfully: OrderResponse(success=True, order_id='demo_1760392584407_1', symbol='BTCUSDT', side=<OrderSide.BUY: 'BUY'>, order_type=<OrderType.MARKET: 'MARKET'>, quantity=0.001, price=50000.0, status=<OrderStatus.FILLED: 'FILLED'>, filled_quantity=0.001, remaining_quantity=0.0, average_price=50000.0, commission=5e-07, commission_asset='USDT', timestamp=datetime.datetime(2025, 10, 13, 21, 56, 24, 407821), error=None, client_order_id=None, metadata={'price_source': 'simulated'})"
    },
    {
      "test": "Bot Trading Integration",
      "status": "PASSED",
      "details": "Bot integration OK. Methods: ['create_bot', 'start_bot', 'stop_bot', 'get_bot_status'], Trading access: True"
    },
    {
      "test": "Market Data Flow",
      "status": "PASSED",
      "details": "Market data flow OK. Methods: ['get_price', 'get_ticker', 'get_orderbook', 'subscribe_to_ticker'], Data available: True"
    },
    {
      "test": "API Rate Limiting",
      "status": "PASSED",
      "details": "Rate limiting features found: [\"binance: ['rate_limiter', 'request_delay', 'max_requests_per_second', 'wait_for_rate_limit']\", \"bybit: ['rate_limiter', 'request_delay', 'max_requests_per_second', 'wait_for_rate_limit']\", \"kucoin: ['rate_limiter', 'request_delay', 'max_requests_per_second', 'wait_for_rate_limit']\", \"coinbase: ['rate_limiter', 'request_delay', 'max_requests_per_second', 'wait_for_rate_limit']\"]"
    }
  ]
}